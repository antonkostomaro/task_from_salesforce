//  Create Batch Job which select all Ð¡ontacts with Is Synced = false 1.5
// a. Batch should copy from Account.BillingAddress to Contact.MailingAddress
// b. Set Contact.IsSynced__c = true;
// c. Update Account field Updated By Contact = true;
// d. Use Query Locator
// e. Create similar Batch and use Iterable

public with sharing class BatchClassNum4 implements Database.Batchable<SObject> {

  public Database.QueryLocator start(Database.BatchableContext bc){
      return Database.getQueryLocator('SELECT Account.Id, Account.BillingCity, Account.BillingCountry, Account.BillingGeocodeAccuracy,' +
      'Account.Updated_By_Contact__c, Account.BillingLatitude, Account.BillingLongitude, Account.BillingPostalCode, Account.BillingState,' +
     'MailingCity, MailingGeocodeAccuracy, MailingLatitude, Account.BillingStreet, MailingLongitude, MailingStreet,MailingState, MailingPostalCode, MailingCountry, Is_Synced__c FROM Contact WHERE Is_Synced__c = FALSE');
  }

  public void execute(Database.BatchableContext bc, List<Contact> scope){
      Map<Id, Account> accountsForUpadate = new Map<Id,Account>();//use map because duplictes was detected
      for(Contact contact: scope){
          contact.MailingCity = contact.Account.BillingCity;
          contact.MailingCountry = contact.Account.BillingCountry;  
          contact.MailingGeocodeAccuracy = contact.Account.BillingGeocodeAccuracy;
          contact.MailingLatitude = contact.Account.BillingLatitude;
          contact.MailingLongitude = contact.Account.BillingLongitude;
          contact.MailingPostalCode = contact.Account.BillingPostalCode;
          contact.MailingState = contact.Account.BillingState;
          contact.MailingStreet = contact.Account.BillingStreet;
          contact.Is_Synced__c = true;
          accountsForUpadate.put(contact.Account.Id, contact.Account);
      }
      for(Account account : accountsForUpadate.values()){
          account.Updated_By_Contact__c = true;
      }
      update scope;
      update accountsForUpadate.values();
  }
  public void finish(Database.BatchableContext bc){

  }
}